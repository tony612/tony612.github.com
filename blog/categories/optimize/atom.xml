<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: optimize | Echo nil > me]]></title>
  <link href="http://Tony612.github.com/blog/categories/optimize/atom.xml" rel="self"/>
  <link href="http://Tony612.github.com/"/>
  <updated>2012-10-30T01:21:49+08:00</updated>
  <id>http://Tony612.github.com/</id>
  <author>
    <name><![CDATA[Tony]]></name>
    <email><![CDATA[h.bing612@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Use include for querying to optimize]]></title>
    <link href="http://Tony612.github.com/blog/2012/10/29/use-include-for-querying-to-increase-the-efficiency/"/>
    <updated>2012-10-29T23:06:00+08:00</updated>
    <id>http://Tony612.github.com/blog/2012/10/29/use-include-for-querying-to-increase-the-efficiency</id>
    <content type="html"><![CDATA[<p>今天写项目，然后参考ruby-china的一部分代码的时候，看到一个<code>include</code>的用法，不知道是怎么回事，因为它是用mongodb的，所以也一时找不到<code>ActiveRecord</code>中的用法。</p>

<p>不过刚刚在看railscasts的时候，突然就看到了这种用法:</p>

<p>比如说<code>Task</code>和<code>Project</code>是多对一的关系</p>

<p>在index的页面需要用到<code>Task</code>和它<code>belongs_to</code>的那个<code>Project</code>，这样的话，看log里，会发现，查找了<code>Project</code>了很多次。</p>

<p>那么就能用<code>@tasks = Task.find(:all, :include =&gt; :project)</code>来查到和project关联的task，这样的话可以把相关联的对象也先读取出来。</p>

<p>那么有什么结果呢？</p>

<p>在console的log里就看得很清楚了，载入页面之后，两次查询就够了。</p>

<p>我自己去写的时候，<code>find</code>方法不起作用，不知道是因为这是以前的写法还是怎样。
就看到实战圣经上有说这个的，原来是<code>includes</code>方法，比如：</p>

<p><code>
@events = Event.includes(:user).order('start_date DESC').page(params[:page])
</code></p>

<p>这样就能查询到最近的<code>event</code>,并把对应的<code>user</code>包含进去，再进行分页了。顿时感觉世界好美好的有木有！！ 哈哈~</p>
]]></content>
  </entry>
  
</feed>
